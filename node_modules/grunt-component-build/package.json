{
  "name": "grunt-component-build",
  "description": "Build and watch Components",
  "version": "0.2.0beta3",
  "homepage": "https://github.com/anthonyshort/grunt-component-build",
  "author": {
    "name": "Anthony Short",
    "email": "antshort+github@gmail.com"
  },
  "contributors": [
    {
      "name": "Antoine Lehurt",
      "email": "keuwah@gmail.com",
      "url": "https://github.com/kewah"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/anthonyshort/grunt-component-build.git"
  },
  "bugs": {
    "url": "https://github.com/anthonyshort/grunt-component-build/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/anthonyshort/grunt-component-build/blob/master/LICENSE-MIT"
    }
  ],
  "main": "grunt.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "grunt": "~0.4.0",
    "coffee-script": "latest",
    "string-to-js": "latest",
    "component-builder": "latest"
  },
  "devDependencies": {
    "grunt-contrib-watch": "~0.2.0",
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt-contrib-clean": "~0.4.0rc6"
  },
  "keywords": [
    "gruntplugin",
    "component(1)",
    "component",
    "builder.js"
  ],
  "readme": "# grunt-component-build\n\nBuild and watch Components. Supports file globs inside of the scripts to build a component using any number of files. This is so that you can use Component in place of Browserify or similar tools to build out CommonJS apps and still have access to the components. \n\nYou can specify scripts and styles within Grunt and these will override the component.json file. This means you don't need to list every file to build with Component. This shouldn't be used for building Components themselves, but for compiling applications in a way you normally would with Browserify but using Component instead so you have access to Components. \n\n## Getting Started\nIf you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide, as it explains how to create a [gruntfile][Getting Started] as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\n\n```shell\nnpm install grunt-component-build --save-dev\n```\n\n[grunt]: https://github.com/cowboy/grunt\n[getting_started]: https://github.com/gruntjs/grunt/wiki/Getting-started\n\n## The Basics\n\nAdd a component section to your Grunt file:\n\n```js\ncomponent: {\n  app: {\n    output: './dist/',\n    config: './component.json',\n    styles: false,\n    scripts: true,\n    standalone: true\n  }\n}\n```\n\nYou can add as many sub-tasks to the component task and they will be compiled separately.\n\n## Extending Component with Plugins\n\nBuilder.js allows us to extending it so we can add support for other languages, like Coffeescript or Jade. You can do this easily in the `configure` option in your grunt file.\n\n```js\ncomponent: {\n  app: {\n    output: './dist/',\n    config: './component.json',\n    styles: false,\n    scripts: true,\n    standalone: true,\n    configure: function(builder) {\n      builder.use(myPlugin);\n    }\n  }\n}\n```\n\nThese plugins are extremely simple. You can grab them from npm or write your own. \n\n* [Stylus](https://npmjs.org/package/component-stylus)\n* [Coffeescript](https://npmjs.org/package/builder-coffee)\n* [Prebuilder](https://npmjs.org/package/component-prebuilder)\n\n## Built-in Plugins\n\nThere are two plugins built into this grunt task. They compile Coffeescript and plain HTML. \n\n```js\ncomponent: {\n  app: {\n    output: './dist/',\n    config: './component.json',\n    styles: false,\n    scripts: true,\n    standalone: true,\n    plugins: ['coffee', 'templates']\n  }\n}\n```\n\nThese are located in the `/plugins` folder and function the same way as any other builder.js plugin. These are opt-in so you'll need to add the line to your config.\n\n### Templates\n\nTemplates will convert any html files you have added to the `templates` section of your `component.json` file so you can require them without needing to do anything. \n\n```js\nvar template = require('./template.html');\n```\n\n### Coffeescript\n\nThis works the same way as the template plugin except that it uses the scripts section of the `component.json` file. It will automatically compile and files ending in `.coffee` and allow you to require them as if they were JS files. \n\n```js\nvar calendar = require('calendar');\n```\n\nYou don't need to add the `.js` extension when requiring the coffee files. Each coffee file is converted on the fly and replaces the original in the built file.\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][grunt].\n\n## Release History\n0.2.0beta - Added support for grunt 0.4.0  \n0.1.4 - Added builder.js plugin support  \n0.1.0 - First release  \n\n## License\nCopyright (c) 2012 Anthony Short  \nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-component-build@0.2.0beta3",
  "dist": {
    "shasum": "a736aaa86d0f3c339de89cb44ee257e8f14af92b"
  },
  "_from": "grunt-component-build@",
  "_resolved": "https://registry.npmjs.org/grunt-component-build/-/grunt-component-build-0.2.0beta3.tgz"
}
